grammar Screme
  rule expression
    ignored*
    expr:(quoted / list / atom)
    ignored* <Expression>
  end

  rule quoted
    quote:("'" / "`" / ",@" / ",") expression <Quoted>
  end

  rule list
    '(' exprs:expression* ')' <List>
  end

  rule atom
    boolean / integer / string / identifier
  end

  rule boolean
    hash ('t' / 'f') <Boolean>
  end

  rule integer
    '-'? ('0' / [1-9]) digits <Integer>
  end

  rule string
    '"' ('\\"' / [^"])* '"' <String>
  end

  rule identifier
    (!delim .)+ <Identifier>
  end

  rule ignored
    whitespace / comment
  end

  rule whitespace
    space / newline
  end

  rule delim
    whitespace / paren
  end

  rule comment
    ';' (!newline .)*
  end

  rule digits
    [0-9]*
  end

  rule hash
    '#'
  end

  rule space
    [\s\t]
  end

  rule newline
    [\n\r]
  end

  rule paren
    [\(\)]
  end
end
